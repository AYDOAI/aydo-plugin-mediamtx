#!/bin/bash
OS=$(uname -s)

if [ "$OS" == "Linux" ]; then
  OS="linux"
fi
if [ "$OS" == "Darwin" ]; then
  OS="darwin"
  echo "ERROR: sorry, we don't support darwin" >&2
  exit 1
fi
PLATFORM=$(uname -m)
  PLATFORM2="$PLATFORM"
if [ "$PLATFORM" == "x86_64" ]; then
  PLATFORM="amd64"
  PLATFORM2="amd64"
fi
if [ "$PLATFORM" == "i686" ]; then
  PLATFORM="x86"
  PLATFORM2="x86"
fi
if [ "$PLATFORM" == "aarch64" ]; then
  PLATFORM="arm64"
  PLATFORM2="arm64"
fi
if [ "$PLATFORM" == "armv7l" ]; then
  PLATFORM2="armv7"
fi
if [ "$PLATFORM" == "armv6l" ]; then
  PLATFORM2="armv6"
fi
echo "$OS-$PLATFORM ($PLATFORM2) detected"


MEDIAMTX_DIR="/srv/mediamtx"
MEDIAMTX_VERSION="1.9.1"
MEDIAMTX_BASE_URL="https://github.com/bluenviron/mediamtx/releases/download"
MEDIAMTX_FILE="mediamtx_v${MEDIAMTX_VERSION}_${OS}_${PLATFORM2}.tar.gz"

echo "Creating mediamtx folder"
mkdir -p $MEDIAMTX_DIR

if [[ ! -e $MEDIAMTX_DIR ]]; then
  echo "ERROR: can't create folder ${MEDIAMTX_DIR}" >&2
  exit 1
fi

cd $MEDIAMTX_DIR

echo "Downloading mediamtx ${MEDIAMTX_BASE_URL}/v${MEDIAMTX_VERSION}/${MEDIAMTX_FILE}"
wget -q ${MEDIAMTX_BASE_URL}/v${MEDIAMTX_VERSION}/${MEDIAMTX_FILE} -O "${MEDIAMTX_FILE}"

if [[ ! -e ./${MEDIAMTX_FILE} ]]; then
  echo "ERROR: can't download mediamtx" >&2
  exit 1
fi

echo "Extracting mediamtx"
tar -xf ${MEDIAMTX_FILE}
rm ${MEDIAMTX_FILE}

echo "Configuring mediamtx"
NEW_BLOCK='paths:
  cam:
    source: rpiCamera
    rpiCameraWidth: 1280
    rpiCameraHeight: 720
    rpiCameraVFlip: true
    rpiCameraHFlip: true
    rpiCameraBitrate: 1500000'

# Используем sed для удаления старого блока и вставки нового
sed -i '/^paths:/,/all_others:/d' ${MEDIAMTX_DIR}/mediamtx.yml
echo "$NEW_BLOCK" >> ${MEDIAMTX_DIR}/mediamtx.yml

if [ "$OS" == "linux" ]; then
echo "Installing mediamtx service"
echo "[Unit]
Wants=network.target
[Service]
ExecStart=${MEDIAMTX_DIR}/mediamtx ${MEDIAMTX_DIR}/mediamtx.yml
WorkingDirectory=${MEDIAMTX_DIR}
StandardOutput=inherit
StandardError=inherit
Restart=always
User=root
[Install]
WantedBy=multi-user.target
" > /etc/systemd/system/mediamtx.service
systemctl daemon-reload
systemctl start mediamtx
systemctl enable mediamtx.service
fi
